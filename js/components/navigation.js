class NavigationComponent {
    constructor() {
        this.activeBtn = "connectionBtn";
        this.bindEvents();
    }

    bindEvents() {
        const navButtons = ["connectionBtn", "contactsBtn", "settingsNavBtn", "networkBtn", "voiceBtn"];
        
        navButtons.forEach(id => {
            const btn = document.getElementById(id);
            if (btn) {
                btn.addEventListener("click", () => this.switchNav(id));
            }
        });
    }

    switchNav(btnId) {
        // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —Å–æ –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫
        document.querySelectorAll(".nav-btn").forEach(btn => {
            btn.classList.remove("active");
        });
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–Ω–æ–ø–∫–µ
        const activeBtn = document.getElementById(btnId);
        if (activeBtn) {
            activeBtn.classList.add("active");
        }
        
        this.activeBtn = btnId;
        this.handleNavAction(btnId);
    }

    handleNavAction(btnId) {
        const actions = {
            connectionBtn: () => NotificationManager.show("üì∂ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è...", "info"),
            contactsBtn: () => NotificationManager.show("üë• –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤...", "info"),
            settingsNavBtn: () => NotificationManager.show("‚öôÔ∏è –û—Ç–∫—Ä—ã—Ç–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫...", "info"),
            networkBtn: () => NotificationManager.show("üåê –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ç–∏...", "info"),
            voiceBtn: () => NotificationManager.show("üìù –ì–æ–ª–æ—Å–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã –≥–æ—Ç–æ–≤—ã", "info")
        };
        
        const action = actions[btnId];
        if (action) {
            action();
        }
    }
}
